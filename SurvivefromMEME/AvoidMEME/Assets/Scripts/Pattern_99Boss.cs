using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Pattern_99Boss : MonoBehaviour
{
    [SerializeField]
    private MovementTransform2D boss;
    [SerializeField]
    private GameObject bossProjectile; // ???? ??????
    [SerializeField]
    private float attackRate = 1;
    [SerializeField]
    private int maxFireCount = 5;

    private AudioSource BGM;

    private void OnEnable()
    {
        BGM = GetComponent<AudioSource>();
        BGM.Play();
        StartCoroutine(nameof(Process));
    }
    private void OnDisable()
    {
        boss.GetComponent<MovingEntity>().Reset();

        StopCoroutine(nameof(Process));
    }
    private IEnumerator Process()
    {
        // ???? ???? ?? ???? ????
        boss.gameObject.SetActive(true);
        yield return new WaitForSeconds(1.6f);
        yield return new WaitForSeconds(0.5f);
        // ???? ???? ????
        yield return StartCoroutine(nameof(MoveDown));

        // ???? ???? ????
        StartCoroutine(nameof(MoveLeftAndRight));

        // ???? ????
        int count = 0;
        while (count < maxFireCount)
        {
            CircleFire();
            count++;

            yield return new WaitForSeconds(attackRate);
        }


        // ???? ???????? ????????
        BGM.Stop();
        gameObject.SetActive(false);
    }

    private IEnumerator MoveDown()
    {
        // ???? ????
        float bossDestinationY = 2;

        // ???? ???????? ??????
        

        // ?????? ???????????? ?????????? ????
        while (true)
        {
            if (boss.transform.position.y <= bossDestinationY)
            {
                boss.MoveTo(Vector3.zero);

                yield break;
            }

            yield return null;
        }
    }

    private IEnumerator MoveLeftAndRight()
    {
        // ???? ?????????? ?? ???????? ???????? ?????? ???? ?????? ??
        float xWeight = 3;

        // ???? ???? ?????? ?????????? ????
        boss.MoveTo(Vector3.right);

        while (true)
        {
            // ?????? ?????? ???? ???? ?????? ???????? ???? ?????? ?????????? ????
            if (boss.transform.position.x <= Constants.min.x + xWeight)
            {
                boss.MoveTo(Vector3.right);
            }

            // ?????? ?????? ?????? ???? ?????? ???????? ???? ?????? ???????? ????
            if (boss.transform.position.x >= Constants.max.x - xWeight)
            {
                boss.MoveTo(Vector3.left);
            }

            yield return null;
        }
    }

    private void CircleFire()
    {
        int count = 15; // ?????? ???? ????
        float intervalAngle = 360 / count; // ?????? ?????? ????

        // ?? ?????? ???????? ?????? ???? ( count ???? ????)
        for (int i=0; i<count; i++)
        {
            // ?????? ????
            GameObject clone = Instantiate(bossProjectile, boss.transform.position, Quaternion.identity);

            // ?????? ???? ????(????)
            float angle = intervalAngle * i;

            // ?????? ???? ????(????)
            float x = Mathf.Cos(angle * Mathf.PI / 180.0f); // cos(????), ?????? ?????? ???? ?????? ???? PI/180?? ??????
            float y = Mathf.Sin(angle * Mathf.PI / 180.0f); // sin(????)
            // ?????? ???? ???? ????
            clone.GetComponent<MovementTransform2D>().MoveTo(new Vector2(x, y));
        }
    }
}
